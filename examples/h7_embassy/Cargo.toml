[package]
name = "power_meter"
version = "0.1.0"
edition = "2024"

[dependencies]
embassy-stm32 = { version = "0.2.0", features = ["defmt", "time-driver-any", "stm32g0b1ce", "memory-x", "unstable-pac", "exti"] }
embassy-executor = { version = "0.7.0", features = ["nightly", "arch-cortex-m", "executor-thread", "defmt"] }
embassy-time = { version = "0.4.0", features = ["defmt", "defmt-timestamp-uptime", "tick-hz-32_768"] }
defmt = "1.0.1"
defmt-rtt = "1.0.0"
cortex-m = { version = "0.7.7", features = ["critical-section-single-core"] }
portable-atomic = { version = "1.11", features = ["critical-section"] } # to make static_cell work in mcan
cortex-m-rt = "0.7.5"
panic-probe = "1.0.0"

mcan = { path = "../..", features = ["h7", "embassy", "defmt"] }

# see for more info: https://docs.rust-embedded.org/book/unsorted/speed-vs-size.html
# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2 # full debug info
debug-assertions = true
incremental = false
opt-level = 3
#opt-level = "s"
overflow-checks = true

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
#opt-level = "s"
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = "z" # 3 - speed, s - size, z - even less size
#opt-level = "s"
overflow-checks = false

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
#opt-level = "s"
overflow-checks = false
